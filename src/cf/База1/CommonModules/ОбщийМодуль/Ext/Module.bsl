
Процедура ЗаписьСправоничкаПриЗаписи(Источник, Отказ) Экспорт
	Если Справочники.ИсходящиеСообщенияВRMQ.НайтиПоРеквизиту("Источник", Источник.ссылка) = Справочники.ИсходящиеСообщенияВRMQ.ПустаяСсылка() Тогда
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЗаявкаНаОбеспечениеТМЦ") Тогда
			Если Источник.Статус = перечисления.СтатусыЗаявки.Согласовано Тогда
				НовоеСообщение = Справочники.ИсходящиеСообщенияВRMQ.СоздатьЭлемент();
				НовоеСообщение.Источник = Источник.Ссылка; 
				ЗаписьJSON = новый ЗаписьJSON;
				ЗаписьJSON.УстановитьСтроку();
				СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON,Источник.Ссылка.ПолучитьОбъект()); 
		       	НовоеСообщение.ТекстСообщения = ЗаписьJSON.Закрыть();                
				НовоеСообщение.ИмяОчереди = "order"; 
				НомерСообщения = ПолучитьНомер();
				НовоеСообщение.Наименование = "Сообщение " + НомерСообщения;
				НовоеСообщение.Записать();
			КонецЕсли;
		ИначеЕсли ТипЗнч(Источник) = Тип("СправочникОбъект.Номенклатура") Тогда 
			НовоеСообщение = Справочники.ИсходящиеСообщенияВRMQ.СоздатьЭлемент();
			НовоеСообщение.Источник = Источник.Ссылка; 
			ЗаписьJSON = новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();
			СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON,Источник.Ссылка.ПолучитьОбъект()); 
			НовоеСообщение.ТекстСообщения = ЗаписьJSON.Закрыть();                
			НовоеСообщение.ИмяОчереди = "RRI"; 
			НомерСообщения = ПолучитьНомер();
			НовоеСообщение.Наименование = "Сообщение " + НомерСообщения;
			НовоеСообщение.Записать();
		ИначеЕсли ТипЗнч(Источник) = Тип("СправочникОбъект.Организация") Тогда 
			НовоеСообщение = Справочники.ИсходящиеСообщенияВRMQ.СоздатьЭлемент();
			НовоеСообщение.Источник = Источник.Ссылка; 
			ЗаписьJSON = новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();
			СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON,Источник.Ссылка.ПолучитьОбъект()); 
			НовоеСообщение.ТекстСообщения = ЗаписьJSON.Закрыть();                
			НовоеСообщение.ИмяОчереди = "Org"; 
			НомерСообщения = ПолучитьНомер();
			НовоеСообщение.Наименование = "Сообщение " + НомерСообщения;
			НовоеСообщение.Записать();
		ИначеЕсли ТипЗнч(Источник) = Тип("СправочникОбъект.Подразделение") Тогда 
			НовоеСообщение = Справочники.ИсходящиеСообщенияВRMQ.СоздатьЭлемент();
			НовоеСообщение.Источник = Источник.Ссылка; 
			ЗаписьJSON = новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();
			СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON,Источник.Ссылка.ПолучитьОбъект()); 
			НовоеСообщение.ТекстСообщения = ЗаписьJSON.Закрыть();                
			НовоеСообщение.ИмяОчереди = "Str"; 
			НомерСообщения = ПолучитьНомер();
			НовоеСообщение.Наименование = "Сообщение " + НомерСообщения;
			НовоеСообщение.Записать();
		ИначеЕсли ТипЗнч(Источник) = Тип("СправочникОбъект.Пользователь") Тогда 
			НовоеСообщение = Справочники.ИсходящиеСообщенияВRMQ.СоздатьЭлемент();
			НовоеСообщение.Источник = Источник.Ссылка; 
			ЗаписьJSON = новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();
			СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON,Источник.Ссылка.ПолучитьОбъект()); 
			НовоеСообщение.ТекстСообщения = ЗаписьJSON.Закрыть();                
			НовоеСообщение.ИмяОчереди = "User"; 
			НомерСообщения = ПолучитьНомер();
			НовоеСообщение.Наименование = "Сообщение " + НомерСообщения;
			НовоеСообщение.Записать();
        ИначеЕсли ТипЗнч(Источник) = Тип("СправочникОбъект.Склад") Тогда 
			НовоеСообщение = Справочники.ИсходящиеСообщенияВRMQ.СоздатьЭлемент();
			НовоеСообщение.Источник = Источник.Ссылка; 
			ЗаписьJSON = новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();
			СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON,Источник.Ссылка.ПолучитьОбъект()); 
			НовоеСообщение.ТекстСообщения = ЗаписьJSON.Закрыть();                
			НовоеСообщение.ИмяОчереди = "Store"; 
			НомерСообщения = ПолучитьНомер();
			НовоеСообщение.Наименование = "Сообщение " + НомерСообщения;
			НовоеСообщение.Записать();
		КонецЕсли;  
	КонецЕсли;
КонецПроцедуры

Функция получитьНомер()  
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходящиеСообщенияВRMQ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИсходящиеСообщенияВRMQ КАК ИсходящиеСообщенияВRMQ";
	Возврат Запрос.Выполнить().Выгрузить().Количество() + 1;
КонецФункции

Процедура ОтправкаСообщенийRMQ() Экспорт  
	КлиентКомпоненты = ПолучитьКомпонентуСервер();
	ОтправитьСообщениеКлиентСервер(КлиентКомпоненты);
КонецПроцедуры

&НаСервере
Функция ПолучитьКомпонентуСервер()
	
	КлиентКомпоненты = Неопределено;
	Если Не ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты) Тогда
		
		ПодключитьКомпонентуСервер();
		ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты);
		
	КонецЕсли;
	
	Возврат КлиентКомпоненты;
КонецФункции


Функция ИнициализироватьКомпонентуКлиентСервер(Компонента)
	
	Попытка
		Компонента  = Новый("AddIn.BITERP.PinkRabbitMQ");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Процедура ОтправитьСообщениеКлиентСервер(КлиентКомпоненты)
	
	НастройкаПодключения = Справочники.НастройкиПодключенияRMQ.НайтиПоНаименованию("Основное");
	Попытка
		КлиентКомпоненты.Connect(
			НастройкаПодключения.Адрес,
			НастройкаПодключения.Порт,
			НастройкаПодключения.Логин,
			НастройкаПодключения.Пароль,
			НастройкаПодключения.ВиртуальныйХост);
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка отправки сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	Попытка
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходящиеСообщенияВRMQ.Ссылка КАК Ссылка,
		|	ИсходящиеСообщенияВRMQ.ВерсияДанных КАК ВерсияДанных,
		|	ИсходящиеСообщенияВRMQ.ПометкаУдаления КАК ПометкаУдаления,
		|	ИсходящиеСообщенияВRMQ.Код КАК Код,
		|	ИсходящиеСообщенияВRMQ.Наименование КАК Наименование,
		|	ИсходящиеСообщенияВRMQ.Отправлено КАК Отправлено,
		|	ИсходящиеСообщенияВRMQ.ИмяОчереди КАК ИмяОчереди,
		|	ИсходящиеСообщенияВRMQ.Источник КАК Источник,
		|	ИсходящиеСообщенияВRMQ.ТекстСообщения КАК ТекстСообщения,
		|	ИсходящиеСообщенияВRMQ.Предопределенный КАК Предопределенный,
		|	ИсходящиеСообщенияВRMQ.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
		|ИЗ
		|	Справочник.ИсходящиеСообщенияВRMQ КАК ИсходящиеСообщенияВRMQ
		|ГДЕ
		|	ИсходящиеСообщенияВRMQ.ПометкаУдаления = ЛОЖЬ
		|	И ИсходящиеСообщенияВRMQ.Отправлено = ЛОЖЬ";
		
		ТаблицаСообщений = Запрос.Выполнить().Выгрузить();
		Для каждого ИсхСообщение из ТаблицаСообщений Цикл
			
			ИмяОчереди        = ИсхСообщение.ИмяОчереди;
			ТекстСообщения    = ИсхСообщение.ТекстСообщения;
			
			
			КлиентКомпоненты.BasicPublish(
				имяОчереди,
				ИмяОчереди,
				ТекстСообщения,
				1,
				Ложь); 
	        ОтпрСообщение = ИсхСообщение.Ссылка.ПолучитьОбъект();
			ОтпрСообщение.Отправлено = Истина;
			ОтпрСообщение.Записать();
		КонецЦикла;
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка отправки сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	Сообщить("Сообщение успешно отправлено!");
КонецПроцедуры


Процедура ПодключитьКомпонентуСервер(КомпонентаПодключена = Неопределено)
	
	АдресВоВременномХранилище = ПолучитьАдресМакетаКомпановкиНаСервере(Новый УникальныйИдентификатор);
	КомпонентаПодключена = ПодключитьВнешнююКомпоненту(
			АдресВоВременномХранилище,
			"BITERP",
			ТипВнешнейКомпоненты.Native);
	Сообщить(НСтр("ru = 'Компонента подключена!'"));
КонецПроцедуры

Функция ПолучитьАдресМакетаКомпановкиНаСервере(УникальныйИдентификатор)
	
	МакетВнешнейКомпоненты    = ПолучитьОбщийМакет("ВнешняяКомпонента");
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(МакетВнешнейКомпоненты, УникальныйИдентификатор);
	
	Возврат АдресВоВременномХранилище;
	
КонецФункции   

&НаСервере
Процедура ПрочитатьСообщениеСервер() Экспорт
	
	КлиентКомпоненты = ПолучитьКомпонентуСервер();
	ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты)
	НастройкаПодключения = Справочники.НастройкиПодключенияRMQ.НайтиПоНаименованию("Основное");
	
	Попытка
		КлиентКомпоненты.Connect(
			НастройкаПодключения.Адрес,
			НастройкаПодключения.Порт,
			НастройкаПодключения.Логин,
			НастройкаПодключения.Пароль,
			НастройкаПодключения.ВиртуальныйХост);
		
		
		
		Попытка
			// обновить статус заявки
			ИмяОчереди = "order2";
			Потребитель = КлиентКомпоненты.BasicConsume(ИмяОчереди, "", Истина, Ложь, 0);
		    ОтветноеСообщение = "";
			Пока КлиентКомпоненты.BasicConsumeMessage("", ОтветноеСообщение, 5) Цикл
				КлиентКомпоненты.BasicAck();
				ОбновитьЗаявку(ОтветноеСообщение);
			КонецЦикла;
			
			КлиентКомпоненты.BasicCancel("");
		Исключение
			ВызватьИсключение КлиентКомпоненты.GetLastError();
		КонецПопытки;
	Исключение
		СистемнаяОшибка = ОписаниеОшибки();
		ТекстСообщения = "Ошибка чтения сообщения!%СистемнаяОшибка%";
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СистемнаяОшибка%", СистемнаяОшибка);
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбновитьЗаявку(ОтветноеСообение)
	КлючЗначение = СтрРазделить(ОтветноеСообение,",");
	Ref       = СокрЛП(Сред (КлючЗначение[0],25,36));
	Status    = Сред (КлючЗначение[8],14,СтрДлина(КлючЗначение[8])-14);
	ДокЗаявка = Документы.ЗаявкаНаОбеспечениеТМЦ.ПолучитьСсылку(Новый УникальныйИдентификатор(Ref)).ПолучитьОбъект();
	ДокЗаявка.Статус  = Перечисления.СтатусыЗаявки[Status];
	ДокЗаявка.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры
	